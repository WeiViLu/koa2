{"version":3,"sources":["../src/koa2.js"],"names":["Koa","require","app","logger","convert","indent","n","Array","join","mid1","ctx","next","body","mid2","mid3","use","listen"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,MAAMC,QAAQ,KAAR,CAAZ;AACA,IAAMC,MAAM,IAAIF,GAAJ,EAAZ;AACA,IAAMG,SAASF,QAAQ,YAAR,CAAf;AACA,IAAMG,UAAUH,QAAQ,aAAR,CAAhB;AACA,IAAMI,SAAS,SAATA,MAAS,CAACC,CAAD;AAAA,WAAO,IAAIC,KAAJ,CAAUD,CAAV,EAAaE,IAAb,CAAkB,OAAlB,CAAP;AAAA,CAAf;;AAEA,IAAMC,OAAO,SAAPA,IAAO,GAAK;AACd;AAAA,4FAAO,iBAAOC,GAAP,EAAWC,IAAX;AAAA;AAAA;AAAA;AAAA;AACH,sCAAKC,IAAL;AADG;AAAA,mCAEGD,MAFH;;AAAA;AAGH,sCAAKC,IAAL;;AAHG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;;AAAA;AAAA;AAAA;AAAA;AAKH,CAND;;AAQA,IAAMC,OAAO,SAAPA,IAAO,GAAK;AACd;AAAA,6FAAO,kBAAOH,GAAP,EAAWC,IAAX;AAAA;AAAA;AAAA;AAAA;AACH,sCAAKC,IAAL,yBAAsBP,OAAO,CAAP,CAAtB;AADG;AAAA,mCAEGM,MAFH;;AAAA;AAGH,sCAAKC,IAAL,yBAAsBP,OAAO,CAAP,CAAtB;;AAHG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;;AAAA;AAAA;AAAA;AAAA;AAKH,CAND;;AAQA,IAAMS,OAAO,SAAPA,IAAO,GAAM;AACf;AAAA,6FAAO,kBAAOJ,GAAP,EAAWC,IAAX;AAAA;AAAA;AAAA;AAAA;AACH,sCAAKC,IAAL,yBAAsBP,OAAO,CAAP,CAAtB;AADG;AAAA,mCAEGM,MAFH;;AAAA;AAGH,sCAAKC,IAAL,2BAAuBP,OAAO,CAAP,CAAvB;;AAHG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;;AAAA;AAAA;AAAA;AAAA;AAKH,CAND;;AAQA;AACAH,IAAIa,GAAJ,CAAQN,MAAR;AACAP,IAAIa,GAAJ,CAAQF,MAAR;AACAX,IAAIa,GAAJ,CAAQD,MAAR;;AAEA;AACA;AACA;;AAEAZ,IAAIc,MAAJ,CAAW,IAAX","file":"koa2.js","sourcesContent":["const Koa = require('koa');\nconst app = new Koa();\nconst logger = require('koa-logger');\nconst convert = require('koa-convert');\nconst indent = (n) => new Array(n).join('&nbsp');\n\nconst mid1 = () =>{\n    return async (ctx,next) =>{\n        this.body = `<h3>请求 => 第一层中间件</h3>`;\n        await next()\n        this.body += `<h3>响应 <= 第一层中间件</h3>`\n    }\n}\n\nconst mid2 = () =>{\n    return async (ctx,next) =>{\n        this.body += `<h3>请求${indent(4)}=> 第二层中间件</h3>`;\n        await next()\n        this.body += `<h3>响应${indent(4)}<= 第二层中间件</h3>`\n    }\n}\n\nconst mid3 = () => {\n    return async (ctx,next) =>{\n        this.body += `<h3>请求${indent(8)}=> 第三层中间件</h3>`\n        await next()\n        this.body += `<h3>响应'${indent(8)}<= 第三层中间件</h3>`\n    }\n}\n\n// app.use(conver(logger()))\napp.use(mid1())\napp.use(mid2())\napp.use(mid3())\n\n// app.use(async(ctx,next) =>{\n//     this.body +=`<p style=\"color: #f60\">${indent(12)}koa核心处理业务</p>`\n// })\n\napp.listen(2222)"]}