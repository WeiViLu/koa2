{"version":3,"sources":["../src/iterator.js"],"names":["makeIterator","arr","i","length","gen","console","log","next","value","done"],"mappings":";;;;;;;;sDAsBUA,Y;;AAtBV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,SAAUA,YAAV,CAAuBC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AACYC,qBADZ,GACc,CADd;;AAAA;AAAA,0BACgBA,IAAED,IAAIE,MADtB;AAAA;AAAA;AAAA;;AAAA;AAAA,2BAEcF,IAAIC,CAAJ,CAFd;;AAAA;AAC6BA,uBAD7B;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,IAAME,MAAMJ,aAAa,CAAC,KAAD,EAAO,KAAP,EAAa,MAAb,CAAb,CAAZ;;AAEAK,QAAQC,GAAR,CAAY,IAAZ,EAAiBF,IAAIG,IAAJ,GAAWC,KAA5B;AACAH,QAAQC,GAAR,CAAY,IAAZ,EAAiBF,IAAIG,IAAJ,GAAWC,KAA5B;AACAH,QAAQC,GAAR,CAAY,IAAZ,EAAiBF,IAAIG,IAAJ,GAAWC,KAA5B;AACAH,QAAQC,GAAR,CAAY,IAAZ,EAAiBF,IAAIG,IAAJ,GAAWE,IAA5B","file":"iterator.js","sourcesContent":["// function makeIterator(arr){\n//     let nextIndex=0;\n\n//     //返回一个迭代器对象\n//     return{\n//         next:() => {\n//             if(nextIndex<arr.length){\n//                 return {value:arr[nextIndex++],done:false}\n//             }else{\n//                 return {done:true}\n//             }\n//         }\n//     }\n// }\n\n// const it = makeIterator([' 吃饭',' 睡觉',' 打豆豆'])\n\n// console.log('首先',it.next().value);\n// console.log('其次',it.next().value);\n// console.log('然后',it.next().value);\n// console.log('最后',it.next().done);\n\nfunction *makeIterator(arr){\n    for(let i=0;i<arr.length;i++){\n        yield arr[i];\n    }\n}\n\nconst gen = makeIterator([' 吃饭',' 睡觉',' 打豆豆'])\n\nconsole.log('首先',gen.next().value);\nconsole.log('其次',gen.next().value);\nconsole.log('然后',gen.next().value);\nconsole.log('最后',gen.next().done);"]}